# A namespaces for the resources defined in templates, not via dependencies
namespaceName: application

# Define NS  labels for example, for PSPs
namespaceLabels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: v1.28

# Not used if hpa is enabled, instead min replica count controls deployment
replicaCount: 1

# An update strategy to apply to deployment pods
strategy:
  type: RollingUpdate

image:
  repository: ivanopulo/django-demo
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods"]
      verbs: ["get", "watch", "list"]

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 101
  fsGroup: 101
  seccompProfile:
    type: "RuntimeDefault"

securityContext:
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: django.itsyndicate.dns.navy
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: letsencrypt-nginx
      hosts:
        - django.itsyndicate.dns.navy

resources:
  limits:
    cpu: 300m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 5
  httpGet:
    port: http
    path: /
  
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 20
  timeoutSeconds: 5
  httpGet:
    port: http
    path: /

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

# Define Persistant Volume Claim Options
pvc:
  accessModes:
    - ReadWriteOnce
  storage: 1Gi # In Gibs
  storageClassName: do-block-storage

nodeSelector: {}

tolerations: []

affinity: {}

issuer:
  enabled: true
  spec:
    acme:
      email: ivan.yakimenko.win@gmail.com 
      server: https://acme-v02.api.letsencrypt.org/directory
      privateKeySecretRef:
        name: letsencrypt-nginx-private-key
      solvers:
        - http01:
            ingress:
              class: nginx

### Values for cert-manager helm-chart included via dependencies in Chart.yaml
cert-manager:
  namespace: cert-manager
  installCRDs: false
  prometheus:
    enabled: false

### Values for ingress-nginx helm chart included via dependencies in Chart.yaml
ingress-nginx:
  controller:
    replicaCount: 2
    resources:
      requests:
        cpu: 100m
        memory: 90Mi